
设计模式是一系列解决特定问题的套路，能提高复用性、可读性、稳健性、安全性等。

面向对象的设计原则：
开闭原则 —— 软件实体应该对扩展开放，对修改个关闭（面向抽象编程，抽象出相对稳定的部分）
里氏替换 —— 继承必须保持超类的所有性质在子类中依然成立（开闭原则的具体补充，说明继承的原理）
依赖倒置 —— 高层模块不应该依赖底层模块，两者都应该依赖其抽象。（开闭原则的具体补充，说明依赖原理）
                具体 每个类尽量提高接口和抽象类，变量尽量申明为借口或抽象类
单一职责 —— 一个类只有一个引起它变化的原因（就是它负责的具体职责发生了变化）
接口隔离 —— 客户端不应该被迫使用它不需要的方法。（接口尽量细分功能，掌握限度，高内聚低耦合）
迪米特法则 —— 最少知道原则，只与你的直接朋友交谈，不和陌生人说话。（功能划分，降低耦合）
合成复用 —— 将已有对象纳入新对象中，作为新对象的成员变量，新对象可以调用已有对象的功能，从而
               达到复用。（实际上就是提取为接口 还是 在子类去实现）
分类：创建型设计模式、

设计模式之创建型模式的特点与分类：对象创建和使用分类
单例模式
原型模式
工厂模式
抽象工厂模式
建造者模式
